version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: visuogen
      POSTGRES_USER: visuogen
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-visuogen_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - visuogen-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U visuogen -d visuogen"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for session storage and caching)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - visuogen-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # VisuoGen Application
  visuogen:
    build: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://visuogen:${POSTGRES_PASSWORD:-visuogen_secure_password}@postgres:5432/visuogen
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379
      
      # Authentication
      SESSION_SECRET: ${SESSION_SECRET}
      REPL_ID: ${REPL_ID}
      ISSUER_URL: ${ISSUER_URL:-https://replit.com/oidc}
      REPLIT_DOMAINS: ${REPLIT_DOMAINS}
      
      # AI API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MODELSLAB_API_KEY: ${MODELSLAB_API_KEY}
      REPLICATE_API_TOKEN: ${REPLICATE_API_TOKEN}
      STABILITY_API_KEY: ${STABILITY_API_KEY}
      PIAPI_API_KEY: ${PIAPI_API_KEY}
      CLIPDROP_API_KEY: ${CLIPDROP_API_KEY}
      
      # Payment Processing
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      VITE_STRIPE_PUBLIC_KEY: ${VITE_STRIPE_PUBLIC_KEY}
      
      # Cloud Storage
      BUNNY_STORAGE_ZONE: ${BUNNY_STORAGE_ZONE}
      BUNNY_ACCESS_KEY: ${BUNNY_ACCESS_KEY}
      BUNNY_HOSTNAME: ${BUNNY_HOSTNAME}
      
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      
    ports:
      - "3000:5000"
    networks:
      - visuogen-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      - visuogen
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - visuogen-network

volumes:
  postgres_data:
  redis_data:
  app_logs:
  nginx_logs:

networks:
  visuogen-network:
    driver: bridge